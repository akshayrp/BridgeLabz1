package com.loginapp.filters;

import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public class RegisterFilter implements Filter {

	public void destroy() {}
	public void init(FilterConfig fConfig) throws ServletException {}
	

	
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException 
	{
		String name = request.getParameter("name");
		String uname = request.getParameter("uname");
		String pass = request.getParameter("pass");
		String repass = request.getParameter("repass");
		
		Pattern passPattern = Pattern.compile("((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%]).{6,20})");
		Matcher passMatcher = passPattern.matcher(pass);
		
//		if (name.isEmpty() || uname.isEmpty())
//		{
//			request.setAttribute("usernameErrorMessage","Name/UserName field cannot be empty");
//			requestmethod(request, response);
//		}
//		else if(name.length() < 3)
//		{
//			request.setAttribute("nameErrorMessage","Name should be greater than 2");
//			requestmethod(request, response);
//		}
//		else if(name.matches("[A-Za-z]") == false)
//		{
//			request.setAttribute("nameErrorMessage","Name should only contain Alphabetic characters");
//			requestmethod(request, response);
//		}
//		else if(uname.length() <= 4)
//		{
//			request.setAttribute("unameErrMessage","UserName should be greater than 4");
//			requestmethod(request, response);
//		}
//		else if(uname.matches("[A-Za-z][0-9]") == false)
//		{
//			request.setAttribute("nameErrorMessage","UserName should only contain Alpha-Numeric characters");
//			requestmethod(request, response);
//		}
//		else
//		{
//			chain.doFilter(request, response);
//		}
		
		
//		

		if(passMatcher.matches() == false)
		{
			request.setAttribute("rePasswordErrorMessage","Invalid password\n# must contains one digit from 0-9\n"+
					"# Must contains one lowercase characters\n" + 
					"# Must contains one uppercase characters\n" + 
					"# Must contains one special symbols in the list \"@#$%\"\n" + 
					"# Match anything with previous condition checking\n" + 
					"# Length at least 6 characters and maximum of 20	");
			requestmethod(request, response);
		}
		else
		{
			chain.doFilter(request, response);
		}
	}
	
	public void requestmethod(ServletRequest request, ServletResponse response) throws ServletException, IOException
	{
		RequestDispatcher dispatcher = request.getRequestDispatcher("Registration.jsp");
		dispatcher.forward(request,response);
	}
}
